import java.util.*;
class queue_array{
	int f=-1,r=-1;
	Scanner sc=new Scanner(System.in);
	int n=sc.nextInt();
	int[] arr=new int[n];
	void enqueue(){
		if(r==(n-1)){
			System.out.println("queue is full");
		}else{
			System.out.println("enter item to push into stack");
			Scanner sc=new Scanner(System.in);
			int i=sc.nextInt();
			if(f==-1 && r==-1){
				f=0;
				r=0;
				arr[r]=i;
				System.out.println("item inserted into queue");
			}else{
				r=r+1;
				arr[r]=i;
				System.out.println("item inserted into stack");
			}
		}
	}
	void dequeue(){
		if(f==-1&&r==-1){
			System.out.println("queue is empty");
		}else{
			f=f+1;
			System.out.println("item deleted from queue");
			if(f>r){
				f=r=-1;
			}
		}
	}
	void display(){
		if(f==-1 && r==-1){
			System.out.println("queue is empty");
		}else{
			System.out.println("stack elements :");
			for(int i=f;i<=r;i++){
				System.out.print(arr[i]+" ");
			}
		}
	}
}
	public class queue{
	public static void main(String args[]){
		System.out.println("enter the size of the queue");
		queue_array s=new queue_array();
		Scanner sc=new Scanner(System.in);
		int ch=0;
		do{
			System.out.println("\nqueue operations");
			System.out.println("1.enqueue");
			System.out.println("2.dequeue");
			System.out.println("3.display");
			System.out.println("4.exit");
			ch=sc.nextInt();
			switch(ch){
				case 1:
				s.enqueue();
				break;
				case 2:
				s.dequeue();
				break;
				case 3:
				s.display();
				break;
				case 4:
				System.exit(0);
				break;
				default:
				System.out.println("invalid choice");
				break;
			}
		}while(ch!=4);
	}
}
